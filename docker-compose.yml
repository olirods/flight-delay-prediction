version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:3.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: bitnami/kafka:3.0.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: 1

  mongodb:
    image: mongo:6.0.3
    restart: always
    volumes:
      - ./resources/import_distances.sh:/flight_prediction/resources/import_distances.sh
      - ./data:/flight_prediction/data

  spark-master:
    image: bitnami/spark:3.1.2
    environment:
      SPARK_MODE: master
    ports:
      - "8080:8080"

  spark-worker:
    image: bitnami/spark:3.1.2
    depends_on: 
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    volumes:
      - ./models:/opt/bitnami/spark/models
      - ./flight_prediction/target/scala-2.12:/opt/bitnami/spark/data
      - ~/.ivy2:/opt/bitnami/spark/.ivy2
  
  web:
    build:
      context: .
      dockerfile: python.dockerfile
    command: python3 ./web/predict_flask.py
    ports:
      - "5000:5000"
    volumes:
      - ./resources/web:/web

       